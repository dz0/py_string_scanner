{
    "../ta/api/accounts/_deprecated_tests_api.py": {
        "322": [
            "first_name",
            "last_name"
        ]
    },
    "../ta/api/accounts/admin.py": {
        "12": "DOCSTRING -- \n    Account admin model.\n    ",
        "15": [
            "first_name",
            "last_name"
        ],
        "16": [
            "is_active",
            "is_staff",
            "is_superuser"
        ],
        "17": "user_permissions",
        "18": [
            "last_login",
            "date_joined"
        ],
        "23": [
            "first_name",
            "last_name"
        ],
        "34": "is_staff",
        "35": [
            "is_staff",
            "is_superuser",
            "is_active"
        ],
        "38": "user_permissions"
    },
    "../ta/api/accounts/apps.py": {
        "6": "DOCSTRING -- ta.api.accounts",
        "7": "DOCSTRING -- ta_accounts"
    },
    "../ta/api/accounts/forms.py": {
        "12": "DOCSTRING -- \n    A form for creating new users.\n\n    Includes all the required fields, plus a repeated password.\n    ",
        "15": "duplicate_email",
        "16": "password_mismatch",
        "29": [
            "first_name",
            "last_name"
        ],
        "37": "DOCSTRING -- Clean form email.\n\n        :return str email: cleaned email\n        :raise forms.ValidationError: Email is duplicated\n\n        ",
        "46": "duplicate_email",
        "47": "duplicate_email",
        "56": "DOCSTRING -- Check that the two password entries match.\n\n        :return str password2: cleaned password2\n        :raise forms.ValidationError: password2 != password1\n\n        ",
        "61": "password_mismatch",
        "62": "password_mismatch",
        "73": "DOCSTRING -- Save user.\n\n        Save the provided password in hashed format.\n\n        :return custom_user.models.EmailUser: user\n\n        ",
        "87": "DOCSTRING -- A form for updating users.\n\n    Includes all the fields on the user, but replaces the password field\n    with admin's password hash display field.\n\n    ",
        "99": "DOCSTRING -- Init the form.",
        "101": "user_permissions",
        "103": "content_type",
        "114": "DOCSTRING -- Clean password.\n\n        Regardless of what the user provides, return the initial value.\n        This is done here, rather than on the field, because the\n        field does not have access to the initial value.\n\n        :return str password:\n\n        "
    },
    "../ta/api/accounts/models.py": {
        "24": [
            "first_name",
            "first_name"
        ],
        "27": [
            "last_name",
            "last_name"
        ],
        "66": "DOCSTRING -- \n    An abstract user model that is an alternative to the standard AbstractUser. The\n    sole difference is that AbstractAccount does not have a username field, and uses\n    the email field as the primary identifier by default.\n\n    Email and password are required. Other fields are optional.\n    ",
        "100": "DOCSTRING -- email",
        "101": [
            "first_name",
            "last_name"
        ],
        "117": "DOCSTRING -- \n        Send an email to this User.\n        ",
        "126": "DOCSTRING -- Account is not a kiosk",
        "127": "DOCSTRING -- Invalid kiosk setup. Kiosk with no participations",
        "129": "DOCSTRING -- Invalid kiosk setup",
        "133": "DOCSTRING -- ta_account",
        "134": "DOCSTRING -- AUTH_USER_MODEL",
        "135": "DOCSTRING -- ta_accounts",
        "142": "DOCSTRING -- ta_registration",
        "143": "DOCSTRING -- account registrations",
        "150": "password_reset",
        "153": "DOCSTRING -- ta_password_reset",
        "154": "DOCSTRING -- account password resets",
        "161": "email_change",
        "165": "DOCSTRING -- ta_email_change",
        "166": "DOCSTRING -- account email change",
        "167": "DOCSTRING -- account email changes",
        "176": "api_settings",
        "179": "DOCSTRING -- ta_api_settings",
        "180": "DOCSTRING -- api settings"
    },
    "../ta/api/accounts/serializers.py": {
        "26": [
            "first_name",
            "last_name",
            "old_password",
            "date_joined"
        ],
        "27": [
            "confirm_invite",
            "is_kiosk"
        ],
        "28": "first_usage",
        "29": "date_joined",
        "30": [
            "confirm_invite",
            "first_usage",
            "write_only"
        ],
        "40": "DOCSTRING -- \n        Object instance -> Dict of primitive datatypes.\n        ",
        "46": "old_password",
        "53": "team_url",
        "93": "old_password",
        "94": "old_password",
        "95": "old_password",
        "96": "old_password",
        "100": "confirm_invite",
        "128": "accounts:confirm_registration",
        "145": "auth:confirm_email_change"
    },
    "../ta/api/accounts/views.py": {
        "33": "DOCSTRING -- \n    **/api/accounts/**\n    ",
        "39": "DOCSTRING -- \n        retrieve list\n        ",
        "46": "DOCSTRING -- \n        register\n        ",
        "53": "DOCSTRING -- \n    **/api/accounts/<pk>/**\n    ",
        "101": "DOCSTRING -- \n    **/api/accounts/<pk>/**\n    ",
        "110": [
            "bookable__venue_id",
            "bookable__venue__team__url"
        ],
        "117": "DOCSTRING -- \n    **/api/accounts/confirm-registration/<hash>/**\n    ",
        "127": "DOCSTRING -- \n    **/api/accounts/confirm-email-change/<hash>/**\n    ",
        "138": "DOCSTRING -- \n    **/api/accounts/<pk>/forgot/**\n    request password reset\n    ",
        "153": "DOCSTRING -- \n    **/api/accounts/confirm-forgot/<hash>/**\n    change the password with given hash\n    ",
        "158": "new_password",
        "167": "DOCSTRING -- \n    **/api/accounts/<account_id>/teams/**\n    gets teams that the account participates in\n    ",
        "184": "DOCSTRING -- \n    **/api/accounts/<pk>/venues/<pk>/booking/**\n    returns bookings for a given venue\n    ",
        "203": "DOCSTRING -- \n       **/api/accounts/<pk>/teams/<url>/**\n        manages account's participation in team\n    ",
        "264": "bookable__venue__work_starts",
        "265": "bookable__venue__work_ends",
        "266": "bookable__venue__id",
        "267": "bookable__venue__name",
        "268": "bookable__venue__timezone",
        "269": "bookable__name"
    },
    "../ta/api/analytics/_deprecated_tests_api.py": {
        "19": "HTTP_HOST",
        "192": "?scope=account&duration=month&from={0}&id={1}&aggregator=avg_booking_duration",
        "200": "?scope=account&duration=alltime&id={0}&aggregator=avg_booking_duration",
        "207": "?scope=table&duration=alltime&identifier={0}&aggregator=avg_booking_duration"
    },
    "../ta/api/analytics/admin.py": {
        "8": "account__email"
    },
    "../ta/api/analytics/aggregators.py": {
        "38": "DOCSTRING -- \n    Lists possible selectors {<name>, <default_value>}\n    ",
        "42": "team_url",
        "49": [
            "team_url",
            "account_id"
        ],
        "61": "DOCSTRING -- \n    Lists possible aggregators <function_name>, [<allowed_scope>, ...]\n    ",
        "63": "avg_activity_times",
        "64": "avg_booking_duration",
        "65": "avg_heights",
        "66": "calories_burned",
        "67": "least_used_table",
        "68": "least_time_spent",
        "69": "most_time_spent",
        "70": "most_used_table",
        "71": "table_utilization",
        "72": "total_activity_times",
        "73": "usage_end",
        "74": "usage_start",
        "76": "graph_booking_duration",
        "79": "avg_room_booking_duration",
        "82": "most_active_room_booking_participant",
        "85": "avg_room_booking_attendance",
        "88": "total_room_bookings",
        "139": "team_url",
        "145": "account_id",
        "211": "__all__",
        "231": "_",
        "238": [
            "bookable__venue__timezone",
            "bookable__venue__work_starts"
        ],
        "239": "bookable__venue__work_ends",
        "244": [
            "bookable__venue__timezone",
            "bookable__venue__work_starts"
        ],
        "245": "bookable__venue__work_ends",
        "251": "only_checked_in",
        "253": "team_url",
        "254": "team_url",
        "257": "only_checked_in",
        "263": "team_url",
        "264": "bookable__prefab__identifier",
        "265": [
            "team_tables#",
            "team_url"
        ],
        "267": "only_checked_in",
        "274": "only_checked_in",
        "280": "team_url",
        "281": [
            "member_bookings#",
            "team_url"
        ],
        "283": "only_checked_in",
        "284": "account_id",
        "287": "account_id",
        "295": "account__id",
        "300": "team_url",
        "306": [
            "account_id",
            "team_url"
        ],
        "317": "team_url",
        "326": "team_url",
        "371": "DOCSTRING -- \n    Aggregator implementations\n    ",
        "376": "DOCSTRING -- \n        :return: average booking duration in minutes\n        ",
        "388": "DOCSTRING -- \n        :return: average sitting and standing heights\n        ",
        "397": [
            "sitting_height",
            "standing_height"
        ],
        "406": "sitting_height",
        "407": "standing_height",
        "411": "account__id",
        "456": "standing_time",
        "457": "sitting_time",
        "478": "standing_time",
        "479": "sitting_time",
        "551": "DOCSTRING -- \n        :return: average booking end time 'HH:MM'\n        ",
        "557": "DOCSTRING -- \n        :return: average check-in time 'HH:MM'\n        ",
        "564": "DOCSTRING -- \n        the percentage of daily time relative to venue.work_start, venue.work_end spent booked\n        :return: average table utilization [0.0, 1.0]\n        ",
        "615": "DOCSTRING -- \n        :return: average room booking duration with at least one check-in\n        ",
        "627": "DOCSTRING -- \n        :return: the account id of the longest total check-in attendance\n        ",
        "644": "DOCSTRING -- \n        :return: the percentage of checked-in participants over invited\n        ",
        "661": "DOCSTRING -- \n        :return: minutes booked by day for a time period\n        "
    },
    "../ta/api/analytics/models.py": {
        "47": "app_usage",
        "50": "DOCSTRING -- ta_app_usage",
        "51": "DOCSTRING -- mobile app usage",
        "52": "DOCSTRING -- mobile app usage logs"
    },
    "../ta/api/analytics/occupancy_analytics.py": {
        "49": "DOCSTRING -- Helper function to help debug/analyse queries.\n    Can also be used to return query in rest api (as list of lines)",
        "64": "DOCSTRING -- \n    Lists possible selectors {<name>, <default_value>}\n    ",
        "99": "DOCSTRING -- \n    Lists possible aggregators <function_name>, [<allowed_scope>, ...]\n    ",
        "101": "by_week_hours",
        "102": "by_prefab",
        "103": "by_state_changes",
        "105": "get_prefabs_intervals",
        "125": "prefab__bookables__name",
        "126": "prefab__identifier",
        "133": "prefab__bookables__venue",
        "134": "prefab__bookables__venue__work_starts",
        "135": "prefab__bookables__venue__work_ends",
        "136": "prefab__bookables__venue__timezone",
        "251": "__all__",
        "283": "DOCSTRING -- \n    Helpers\n    ",
        "289": "DOCSTRING -- Partition intervals to weekdays (or hours)\n        expects that intervals doesn't span over few parts...\n        ",
        "295": "DOCSTRING -- \n            params:  interval of activity\n                     part   of partitioning (day/hour or so)\n            ",
        "345": "DOCSTRING -- \n    Perspectives\n    ",
        "352": "DOCSTRING -- EP1 by Rokas\n        https://tableair.slack.com/files/U8YH9D5K6/F8YKP6DU2/workoccupancy_endpoint_spec_description.txt\n        ",
        "379": "DOCSTRING -- translates intervals to timedeltas, so the starting (from) point is 0",
        "431": "DOCSTRING -- function that distributes interval among the parts of partition\n                example:\n                partition = (start_time, part_size, parts_count)\n                workday = (9*60, 60, 8)  # in minutes: starts 9:00, and split into 8 hours\n                9  10  11  12  13  14  15  16  (17)\n\n                initial partitioned sums:\n                0   0   0   0   0   0   0   0\n\n                if interval:  9:20  9:30\n                10   0   0   0   0   0   0   0\n\n                if interval:  9:20  10:00\n                40   0   0   0   0   0   0   0\n\n                if interval:  9:20  10:20\n                40   20   0   0   0   0   0   0\n\n                if interval:  9:20  11:45\n                40   60   45   0   0   0   0   0\n\n                edge cases:\n                if interval:  None  9:30\n                30   0   0   0   0   0   0   0\n\n                if interval:  9:20 None\n                40  60  60  60  60  60  60  60\n\n                if interval:  10:00  10:00\n                0   0   0   0   0   0   0   0\n\n                error cases\n\n                if interval:  8:30  9:30  (if earlier than workday start, should get None)\n                30   0   0   0   0   0   0   0\n\n                if interval:  10:00  9:40\n                30   0   0   0   0   0   0   0\n                ",
        "473": "DOCSTRING -- \n            jei from yra 1mad -- 0 -trinti-> 5, 6\n            jei from yra 2mad -- 1 -trinti-> 4, 5\n            jei from yra 3mad -- 2 -trinti-> 3, 4\n\n            jei from yra 6mad -- 5 -trinti-> 0, 1\n            jei from yra 7mad -- 6 -trinti-> -1, 0\n            ",
        "493": "DOCSTRING -- gets date in parameter \"from\"\n        if <duration> is week: imagines week starts on it (though it might be not monday)\n        ",
        "505": "DOCSTRING -- EP2 by Rokas\n        https://tableair.slack.com/files/U8YH9D5K6/F8YKP6DU2/workoccupancy_endpoint_spec_description.txt\n        ",
        "527": "bookables__name",
        "537": "DOCSTRING -- returns avg start and end of work",
        "548": "DOCSTRING -- Take work starts and ends in each partition (weekday)",
        "549": "DOCSTRING -- If include_empty_days=False, skip days with no info (should be weekends and so)  ",
        "587": "DOCSTRING -- \n        EP4 by Rokas\n        https://tableair.slack.com/files/U8YH9D5K6/F8YKP6DU2/workoccupancy_endpoint_spec_description.txt\n        ?page=1\n        ",
        "648": "DOCSTRING -- \n        For DEV purposes\n                # most activity:\n        {\n        \"prefab\": 152,\n        \"venue__name\": \"Approved house of cards\",\n        \"cnt\": 223,\n        \"prefab__identifier\": \"SP000000A\",\n        \"venue\": 9\n        },\n        \"prefab\": 155,             \"cnt\": 211,             \"prefab__identifier\": \"SP000000C\",             \"venue\": 9\n        \"prefab\": 156,                   \"cnt\": 30,          \"prefab__identifier\": \"SP0200000\",            \"venue\": 8\n        \"prefab\": 157,            \"venue__name\": \"euneV\",            \"cnt\": 4,            \"prefab__identifier\": \"SP0200001\",            \"venue\": 16\n        \"prefab\": 14,            \"venue__name\": \"Demo Venue\",            \"cnt\": 1,            \"prefab__identifier\": \"X0000000E\",            \"venue\": 5\n\n\n        ",
        "657": "prefab__usage_set",
        "660": [
            "prefab__identifier",
            "venue__name"
        ],
        "669": "DOCSTRING -- \n        Adopted from SitStandAnalyticsAggregator\n        :return:\n        ",
        "695": [
            "prefab__id",
            "-prefab__id"
        ],
        "706": "prefab_identifier",
        "715": "page_size",
        "741": "prefab_identifier",
        "814": "DOCSTRING -- \"\n            if missing the very first interval start\n            or very last interval end\n            delete them or\n\n            replace with week start and end respectively (with idea, that timestamps were outside query)\n            but should keep in mind to substract weekends... # TODO\n            ",
        "832": "validate_missing_timepoints"
    },
    "../ta/api/analytics/serializers.py": {
        "20": "account_id"
    },
    "../ta/api/analytics/views.py": {
        "87": "by_state_changes",
        "91": "by_week_hours",
        "110": [
            "this_week",
            "last_week"
        ],
        "112": "this_week",
        "114": "last_week",
        "127": "by_state_changes",
        "133": "by_prefab",
        "135": "by_state_changes",
        "138": "tableair-prefab_occupancy"
    },
    "../ta/api/bookables/activity/occupancy.py": {
        "21": "DOCSTRING -- https://tableair.slack.com/archives/C0GBXFB0X/p1516972939000060\n    esminis parametras yra 'po' ir 'no'\n    'po' -> previous occupancy, 'no' -> new occupancy\n\n    tai jeigu 'po': 0 ir 'no': 1   tai rei\u0161kia stalas (sensorius) tuo metu tapo u\u017eimtas\n    o jeigu 'po': 1 ir 'no': 0, tai nuo stalo (sensoriaus) ka\u017ekas nu\u0117jo\n    jeigu 'po': 1 ir 'no': 1, tai jis tiesiog toliau yra u\u017eimtas, b\u016bsena nesikei\u010dia\n\n"
    },
    "../ta/api/bookables/admin.py": {
        "7": "is_confirmed",
        "9": "is_confirmed",
        "13": [
            "timestamp_formatted",
            "created_formatted"
        ],
        "14": "prefab__identifier",
        "21": "DOCSTRING -- timestamp",
        "22": "DOCSTRING -- Timestamp Sent by the Sensor",
        "27": "DOCSTRING -- created",
        "31": "is_historic",
        "32": "prefab__identifier",
        "33": "is_historic"
    },
    "../ta/api/bookables/endpoints.py": {
        "92": "team_url",
        "94": "prefab__firmware_ver",
        "95": "prefab__type",
        "96": "prefab__firmware_ver_target",
        "188": "fields_from_url"
    },
    "../ta/api/bookables/models.py": {
        "21": "DOCSTRING -- ta_prefab_type",
        "39": "DOCSTRING -- ta_prefab",
        "51": "usage_set",
        "55": "DOCSTRING -- ta_prefab_usage",
        "85": "DOCSTRING -- ta_bookable"
    },
    "../ta/api/bookables/serializers.py": {
        "45": "is_historic",
        "53": "is_confirmed",
        "54": "firmware_ver"
    },
    "../ta/api/bookables/sitstand/aggregators.py": {
        "31": "team_url",
        "32": "venue_id",
        "57": "avg_standing_time",
        "58": "avg_sitting_time",
        "59": "avg_standing_height",
        "60": "avg_sitting_height",
        "61": "avg_switches",
        "62": "avg_minor_switches",
        "63": "height_visuals",
        "71": "prefab__bookables__venue__name",
        "72": "prefab__identifier",
        "73": "prefab__bookables__venue__work_starts",
        "74": "prefab__bookables__venue__work_ends",
        "75": "prefab__bookables__venue__timezone",
        "76": "prefab__bookables__venue__height_threshold",
        "92": "DOCSTRING -- \n        Performs a single calculation based of context kwargs\n        :return:\n        ",
        "97": "height_visuals",
        "99": "height_visuals",
        "109": "prefab_identifier"
    },
    "../ta/api/bookables/sitstand/endpoints.py": {
        "28": "team_url",
        "30": "venue_id",
        "61": "prefab__bookables__venue__height_threshold",
        "62": "prefab__bookables__venue__timezone",
        "74": [
            "duration_mins",
            "height_mm",
            "is_sitting"
        ],
        "75": "is_sitting"
    },
    "../ta/api/bookables/utils.py": {
        "59": "DOCSTRING -- \n        finds the first free spot to place table in\n        :return: pair (column, row)\n        "
    },
    "../ta/api/bookables/validators/bookable_validator.py": {
        "30": "DOCSTRING -- \n    Primitives\n    ",
        "43": "booked_by",
        "85": "booked_by",
        "86": "account_id"
    },
    "../ta/api/bookables/validators/prefab_usage_validator.py": {
        "56": "prefab_usage",
        "61": "prefab_usage"
    },
    "../ta/api/bookables/validators/prefab_validator.py": {
        "11": "DOCSTRING -- [A-Z0-9]{9}",
        "29": "DOCSTRING -- 0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    },
    "../ta/api/booking/admin.py": {
        "7": "check_in",
        "8": [
            "account__email",
            "bookable__prefab__identifier"
        ]
    },
    "../ta/api/booking/confirmation.py": {
        "9": "DOCSTRING -- Invitation to a meeting",
        "13": "SHORT_DATETIME_FORMAT",
        "14": "SHORT_DATETIME_FORMAT",
        "20": "DOCSTRING -- Meeting was rescheduled",
        "25": "SHORT_DATETIME_FORMAT",
        "26": "SHORT_DATETIME_FORMAT",
        "33": "DOCSTRING -- Meeting was scheduled",
        "38": "SHORT_DATETIME_FORMAT",
        "39": "SHORT_DATETIME_FORMAT",
        "46": "DOCSTRING -- Meeting was canceled",
        "51": "SHORT_DATETIME_FORMAT",
        "52": "SHORT_DATETIME_FORMAT"
    },
    "../ta/api/booking/endpoints.py": {
        "37": "bookable__venue_id",
        "150": "account_id",
        "152": "bookable__venue_id",
        "153": "bookable__venue__name",
        "155": "eligible_for_check_in",
        "164": "account_id",
        "174": "account_id",
        "175": "team_url",
        "177": "-bookable__prefab__type__is_reserved",
        "178": "bookable__prefab__type",
        "192": "team_url"
    },
    "../ta/api/booking/management.py": {
        "48": "repeat_every",
        "51": "start_date",
        "52": "end_date",
        "53": "end_occurrences",
        "55": "start_time",
        "56": "end_time",
        "58": "ending_at",
        "60": "use_random_table",
        "66": "account_id",
        "67": "venue_id",
        "69": "table_identifier",
        "70": "table_identifier",
        "72": [
            "start_time",
            "start_time"
        ],
        "73": [
            "end_time",
            "end_time"
        ],
        "78": "end_time",
        "86": [
            "ending_at",
            "ending_at"
        ],
        "88": [
            "ending_at",
            "ending_at"
        ],
        "92": "ending_at",
        "93": [
            "end_date",
            "end_date"
        ],
        "94": [
            "end_date",
            "start_date"
        ],
        "95": "end_date",
        "100": "ending_at",
        "101": [
            "end_occurrences",
            "end_occurrences"
        ],
        "111": [
            "use_random_table",
            "use_random_table"
        ],
        "114": "start_time",
        "115": "end_time",
        "147": "end_date",
        "165": "prefab__identifier",
        "187": [
            "start_time",
            "end_time"
        ]
    },
    "../ta/api/booking/models.py": {
        "89": "DOCSTRING -- ta_booking",
        "90": "DOCSTRING -- booking",
        "91": "DOCSTRING -- bookings",
        "93": "DOCSTRING -- objects"
    },
    "../ta/api/booking/notifications.py": {
        "37": "notification_record_id",
        "38": "notification_id",
        "63": "CHECKIN_CATEGORY",
        "72": "CHECKIN_CATEGORY",
        "92": "push_token",
        "104": "push_token",
        "131": "push_token",
        "188": "account_id",
        "190": "account_id",
        "198": "notification_id"
    },
    "../ta/api/booking/serializers.py": {
        "14": "prefab__identifier",
        "21": "DOCSTRING -- __all__",
        "23": "read_only",
        "29": "DOCSTRING -- __all__"
    },
    "../ta/api/booking/validators/booking_validators.py": {
        "31": "DOCSTRING -- date_extrema_exempt",
        "32": "DOCSTRING -- intersection_exempt",
        "33": "DOCSTRING -- other_bookables_intersection_exempt",
        "34": "DOCSTRING -- check_in_restrictions_exempt",
        "35": "DOCSTRING -- notification_exempt",
        "40": "too_long",
        "41": "too_short",
        "43": [
            "too_early",
            "too_early_0"
        ],
        "45": "too_late",
        "49": [
            "check_in",
            "check_in_once"
        ],
        "50": [
            "check_in",
            "check_in_early"
        ],
        "51": [
            "check_in",
            "check_in_late"
        ],
        "65": "check_in",
        "106": "DOCSTRING -- \n    Instance helper functions\n    ",
        "131": "intersecting_allowed",
        "138": "DOCSTRING -- \n    Primitives\n    ",
        "146": "check_in",
        "153": [
            "check_in",
            "check_in"
        ],
        "186": "check_in",
        "187": "check_in",
        "206": "check_in",
        "247": "check_in"
    },
    "../ta/api/booking/validators/repeating_booking_validators.py": {
        "73": "end_date",
        "95": "bookable__prefab__id",
        "111": [
            "start_time",
            "end_time"
        ],
        "150": "DOCSTRING -- \n    Primitives\n    ",
        "158": "start_date",
        "159": [
            "start_time",
            "start_time"
        ],
        "160": [
            "end_time",
            "end_time"
        ],
        "162": "repeat_every",
        "169": "ending_type",
        "171": "ending_type",
        "175": "end_date",
        "176": "end_date",
        "178": "end_occurrences",
        "180": "use_random_bookable",
        "184": "user_random_bookable",
        "187": "__iter__"
    },
    "../ta/api/broker/endpoints.py": {
        "15": "notification_id"
    },
    "../ta/api/broker/serializers.py": {
        "11": "DOCSTRING -- __all__"
    },
    "../ta/api/devices/models.py": {
        "25": "DOCSTRING -- ta_agent",
        "26": "DOCSTRING -- agent",
        "27": "DOCSTRING -- agents",
        "28": "is_active",
        "56": [
            "entity_type",
            "entity_id"
        ],
        "59": "DOCSTRING -- ta_notification",
        "60": "DOCSTRING -- notification",
        "61": "DOCSTRING -- notifications"
    },
    "../ta/api/devices/serializers.py": {
        "10": [
            "push_token",
            "is_active"
        ],
        "12": [
            "push_token",
            "write_only"
        ],
        "27": "is_active",
        "28": "is_active"
    },
    "../ta/api/firmware/models.py": {
        "12": "DOCSTRING -- ta_firmware",
        "13": "DOCSTRING -- firmware version",
        "14": "DOCSTRING -- firmware versions",
        "15": "release_date"
    },
    "../ta/api/groups/endpoints.py": {
        "11": "fields_from_url",
        "32": "fields_from_url"
    },
    "../ta/api/groups/models.py": {
        "11": "group_memberships",
        "14": "DOCSTRING -- group",
        "15": "DOCSTRING -- groups",
        "16": "DOCSTRING -- ta_group",
        "28": "DOCSTRING -- group member",
        "29": "DOCSTRING -- group members",
        "30": "DOCSTRING -- ta_group_member"
    },
    "../ta/api/groups/serializers.py": {
        "22": "DOCSTRING -- __all__"
    },
    "../ta/api/groups/validators.py": {
        "54": "account_id"
    },
    "../ta/api/integration/endpoints.py": {
        "48": "external_email"
    },
    "../ta/api/integration/models.py": {
        "10": "calendar_links",
        "13": "DOCSTRING -- calendar integration link",
        "14": "DOCSTRING -- calendar integration links",
        "15": "DOCSTRING -- ta_calendar_link"
    },
    "../ta/api/integration/sync.py": {
        "44": "account__email"
    },
    "../ta/api/iot/serializers.py": {
        "9": "check_in",
        "14": "c_i"
    },
    "../ta/api/iot/views.py": {
        "22": "DOCSTRING -- \n    Deprecated\n    ",
        "47": [
            "prefab__firmware_ver",
            "prefab__firmware_ver_target"
        ],
        "48": [
            "venue__work_starts",
            "venue__work_ends",
            "venue__timezone"
        ],
        "58": "venue__timezone",
        "59": "venue__work_starts",
        "60": "venue__work_ends",
        "65": "prefab__firmware_ver",
        "66": "prefab__firmware_ver_target"
    },
    "../ta/api/kiosk/endpoints.py": {
        "24": "grid_object",
        "36": "participations__kiosk_grid_object"
    },
    "../ta/api/kiosk/serializers.py": {
        "78": "grid_object"
    },
    "../ta/api/kiosk/validators.py": {
        "34": "last_name",
        "58": "grid_object"
    },
    "../ta/api/licensing/admin.py": {
        "7": [
            "max_rooms",
            "max_kiosks",
            "room_plan_from",
            "kiosk_plan_from"
        ],
        "8": [
            "team__url",
            "team__name"
        ]
    },
    "../ta/api/licensing/models.py": {
        "15": "DOCSTRING -- ta_license"
    },
    "../ta/api/logging/apps.py": {
        "10": "DOCSTRING -- ta.api.logging",
        "11": "DOCSTRING -- ta_api_logging",
        "17": "log_signal_post_save",
        "18": "log_signal_post_delete",
        "20": "log_signal_user_login",
        "22": "log_signal_http_4xx"
    },
    "../ta/api/logging/models.py": {
        "31": [
            "content_type",
            "object_id"
        ],
        "56": "DOCSTRING -- ta_log",
        "57": "DOCSTRING -- logging",
        "58": "DOCSTRING -- logs"
    },
    "../ta/api/logging/serializers.py": {
        "9": [
            "content_type",
            "object_id",
            "object_repr"
        ]
    },
    "../ta/api/logging/signals.py": {
        "6": "ta_api_logging",
        "13": "app_label",
        "22": "get_response"
    },
    "../ta/api/logging/views.py": {
        "14": "DOCSTRING -- \n    **api/logs/**\n    "
    },
    "../ta/api/mux/views.py": {
        "31": "team_url",
        "33": "team_url",
        "38": "first_name"
    },
    "../ta/api/objects/apps.py": {
        "5": "DOCSTRING -- ta.api.objects"
    },
    "../ta/api/objects/endpoints.py": {
        "13": "fields_from_url",
        "34": "fields_from_url"
    },
    "../ta/api/objects/models.py": {
        "14": "grid_tiles",
        "15": "grid_tiles",
        "19": "DOCSTRING -- ta_tile",
        "20": "DOCSTRING -- tile",
        "21": "DOCSTRING -- tiles",
        "30": "grid_objects",
        "34": "DOCSTRING -- ta_object",
        "35": "DOCSTRING -- object",
        "36": "DOCSTRING -- objects"
    },
    "../ta/api/objects/serializers.py": {
        "15": "DOCSTRING -- __all__",
        "25": "DOCSTRING -- __all__"
    },
    "../ta/api/requests/models.py": {
        "36": "DOCSTRING -- ta_request",
        "37": "DOCSTRING -- team access request",
        "38": "DOCSTRING -- team access requests"
    },
    "../ta/api/requests/serializers.py": {
        "28": "team_id",
        "64": "team_url"
    },
    "../ta/api/requests/views.py": {
        "18": "DOCSTRING -- \n    **api/teams/<team_url>/requests/**\n    "
    },
    "../ta/api/room_booking/__init__.py": {
        "1": "ta.api.room_booking.apps.RoomBookingConfig"
    },
    "../ta/api/room_booking/apps.py": {
        "5": "DOCSTRING -- ta.api.room_booking",
        "6": "DOCSTRING -- room_booking",
        "7": "DOCSTRING -- Room Booking"
    },
    "../ta/api/room_booking/emails.py": {
        "41": "room_booking:decline",
        "42": "room_booking",
        "43": "room_booking:accept",
        "44": "room_booking"
    },
    "../ta/api/room_booking/endpoints.py": {
        "31": [
            "host__first_name",
            "host__last_name"
        ],
        "35": "fields_from_url",
        "45": "fields_from_url",
        "62": "account_id",
        "64": "team_url",
        "80": "team_url",
        "97": [
            "fields_from_url",
            "room_booking"
        ],
        "107": "account_id",
        "129": [
            "fields_from_url",
            "room_booking"
        ],
        "195": "room__bookable__venue__name"
    },
    "../ta/api/room_booking/managers.py": {
        "24": "room_booking",
        "39": "room_booking"
    },
    "../ta/api/room_booking/models.py": {
        "15": "room_bookings",
        "16": "hosted_room_bookings",
        "25": "DOCSTRING -- room booking",
        "26": "DOCSTRING -- room bookings",
        "27": "DOCSTRING -- ta_room_booking",
        "36": "room_bookings",
        "42": "DOCSTRING -- room booking participant",
        "43": "DOCSTRING -- room booking participants",
        "44": "DOCSTRING -- ta_room_booking_participant",
        "45": "room_booking",
        "46": [
            "account__first_name",
            "account__last_name"
        ]
    },
    "../ta/api/room_booking/serializers.py": {
        "13": "room_booking",
        "14": "read_only",
        "18": "bookable__prefab__identifier",
        "23": "DOCSTRING -- __all__",
        "24": "read_only",
        "28": "bookable__prefab__identifier",
        "39": "DOCSTRING -- __all__",
        "40": "read_only"
    },
    "../ta/api/room_booking/validators.py": {
        "30": "DOCSTRING -- \n    Validates participant attendance states (accept/decline)\n    ",
        "31": "DOCSTRING -- Room booking must have a confirmed status",
        "34": [
            "room_booking",
            "room_booking"
        ],
        "37": "skip_booking_checks",
        "42": "room_booking",
        "74": "DOCSTRING -- \n    Validates participant invitation (invite/remove)\n    ",
        "75": "DOCSTRING -- no_email_notifications",
        "87": "skip_capacity_checks",
        "88": [
            "room_booking",
            "room_booking"
        ],
        "93": "skip_eligibility_checks",
        "94": "room_booking",
        "100": "room_booking",
        "110": "skip_unique_check",
        "127": "room_booking__host",
        "159": "start_now",
        "217": "time_changed",
        "219": "replace_participants",
        "220": "account_id",
        "221": "remove_participants",
        "222": "account_id",
        "223": "create_participants",
        "224": "account_id",
        "227": "remove_participants",
        "228": "create_participants",
        "263": "time_changed",
        "269": "create_participants",
        "272": "create_participants",
        "279": "remove_participants",
        "281": "remove_participants",
        "288": "room_booking__host"
    },
    "../ta/api/rooms/endpoints.py": {
        "18": "fields_from_url",
        "44": "fields_from_url",
        "65": "fields_from_url"
    },
    "../ta/api/rooms/models.py": {
        "14": "DOCSTRING -- room",
        "15": "DOCSTRING -- rooms",
        "16": "DOCSTRING -- ta_room",
        "28": "room_objects",
        "31": "DOCSTRING -- room object",
        "32": "DOCSTRING -- room objects",
        "33": "DOCSTRING -- ta_room_object"
    },
    "../ta/api/rooms/serializers.py": {
        "13": "bookable__prefab__identifier",
        "22": "prefab__identifier",
        "29": "DOCSTRING -- __all__",
        "48": "bookable__prefab__identifier",
        "53": "DOCSTRING -- __all__"
    },
    "../ta/api/rooms/validators.py": {
        "30": "tiles_to_delete",
        "36": "skip_tile_continuity_check",
        "70": "tiles_to_delete",
        "71": "tiles_to_delete",
        "121": "tiles_to_delete",
        "127": "tiles_to_delete",
        "130": "is_occupied"
    },
    "../ta/api/sync/models.py": {
        "46": "standing_height",
        "53": "DOCSTRING -- ta_settings",
        "54": "DOCSTRING -- settings synchronization"
    },
    "../ta/api/sync/serializers.py": {
        "12": "date_modified",
        "20": [
            "sitting_height",
            "standing_height",
            "unit_system",
            "date_modified",
            "use_12_hour_clock"
        ]
    },
    "../ta/api/sync/views.py": {
        "18": "DOCSTRING -- \n    **api/accounts/<account_pk>/sync/**\n    "
    },
    "../ta/api/teams/endpoints.py": {
        "31": "team_url",
        "63": "fields_from_url",
        "84": "__non_field_errors__",
        "88": "sender_email"
    },
    "../ta/api/teams/models.py": {
        "23": "DOCSTRING -- \n    Renames a given filename to a unique one\n    :param extension: (optional) use this parameter when you have the extension ready\n    :param original_filename: original full filename (file.ext)\n    :return: a random UUID filename with original lowercased extension\n    ",
        "34": "DOCSTRING -- \n    Team service model.\n    ",
        "62": "DOCSTRING -- ta_team",
        "63": "DOCSTRING -- teams",
        "73": "DOCSTRING -- \n    Participation intermediary model.\n    Connects Team with Account as many to many.\n    ",
        "97": "DOCSTRING -- ta_participation",
        "98": "DOCSTRING -- participations",
        "110": "DOCSTRING -- participant permission",
        "111": "DOCSTRING -- participant permissions",
        "112": "DOCSTRING -- ta_participant_permission",
        "124": "DOCSTRING -- ta_invitation",
        "125": "DOCSTRING -- team invitation",
        "126": "DOCSTRING -- team invitations"
    },
    "../ta/api/teams/serializers.py": {
        "16": "is_historic",
        "28": "recurring_invitation"
    },
    "../ta/api/teams/validators/invitation_validator.py": {
        "30": "recurring_invitation",
        "39": "auth:confirm_invite"
    },
    "../ta/api/teams/validators/team_validator.py": {
        "18": "DOCSTRING -- \n    Field validators\n    ",
        "36": "DOCSTRING -- \n        Name and URL uniqueness checks. Moved here from DB layer due to is_historic presence.\n        ",
        "50": "DOCSTRING -- \n    Global validators\n    ",
        "57": "contact_email",
        "58": "contact_email"
    },
    "../ta/api/teams/views.py": {
        "17": "DOCSTRING -- \n    **api/teams/<team_url>/venues/**\n    ",
        "32": "DOCSTRING -- \n    **api/teams/<team_url>/participants/**\n    ",
        "39": "first_name"
    },
    "../ta/api/ui/endpoints.py": {
        "12": "fields_from_url",
        "16": "fields_from_url",
        "27": "fields_from_url",
        "32": "fields_from_url",
        "46": "fields_from_url"
    },
    "../ta/api/ui/models.py": {
        "20": "DOCSTRING -- ta_ui_settings",
        "21": "DOCSTRING -- UI Settings",
        "30": "DOCSTRING -- ta_ui_team_settings",
        "31": "DOCSTRING -- UI Team Settings",
        "48": "venue_settings",
        "51": "DOCSTRING -- ta_ui_venue_settings",
        "52": "DOCSTRING -- UI Venue Settings"
    },
    "../ta/api/ui/serializers.py": {
        "28": "team_settings",
        "41": "venue_settings"
    },
    "../ta/api/ui/validators.py": {
        "17": "skip_venue_assignment_check",
        "19": "last_used_venue",
        "22": "skip_participation_construction",
        "30": "check_in_duration",
        "37": "scale_factor",
        "47": "team_settings"
    },
    "../ta/api/validators/tests.py": {
        "9": "DOCSTRING -- must be fixed"
    },
    "../ta/api/venues/models.py": {
        "25": "work_starts",
        "96": "DOCSTRING -- ta_venue",
        "97": "DOCSTRING -- venue",
        "98": "DOCSTRING -- venues",
        "107": "DOCSTRING -- \n    Renames a given filename to a unique one\n    :param extension: (optional) use this parameter when you have the extension ready\n    :param original_filename: original full filename (file.ext)\n    :return: a random UUID filename with original lowercased extension\n    ",
        "126": "DOCSTRING -- ta_venue_back_img",
        "127": "DOCSTRING -- venue background image",
        "128": "DOCSTRING -- venue background images"
    },
    "../ta/api/venues/permissions.py": {
        "10": "team_url",
        "19": "venue_id"
    },
    "../ta/api/venues/serializers.py": {
        "60": "is_historic"
    },
    "../ta/api/venues/validators/venue_image_validator.py": {
        "21": "skip_img_checks",
        "28": "skip_img_checks"
    },
    "../ta/api/venues/validators/venue_validator.py": {
        "22": "is_historic",
        "29": "work_ends",
        "33": "height_threshold",
        "36": [
            "work_starts",
            "work_ends"
        ],
        "46": "work_starts",
        "47": "work_ends"
    },
    "../ta/api/venues/views.py": {
        "15": "DOCSTRING -- \n    **api/venues/<pk>/tables/**\n    "
    }
}